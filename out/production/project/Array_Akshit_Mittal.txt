1.Reverse an integer array.
class reverseInteger{
    public static void main(String[] args) {
        int[] arr = {1,2,3,4,5};
        for(int i : rev(arr)){
            System.out.println(i);
        }
    }
    public static int[] rev(int[] arr) {
        int m = arr.length-1;
        int[] a = new int[arr.length];
        for(int i = 0;i<arr.length;i++){
            a[i] = arr[m-i];
        }
        return a;
    }
    

}


2.Find the maximum and minimum element in an integer array.



import java.util.Arrays;

class maxMin{
    public static void main(String[] args) {
        int[] arr = {1,2,3,4,5};
        
        int max = max(arr);
        int min = min(arr);
        System.out.println(max);
        System.out.println(min);
    }    
    public static int max(int[] arr){
        Arrays.sort(arr);
        return arr[arr.length-1];
    }
    public static int min(int[] arr){
        Arrays.sort(arr);
        return arr[0];
    }
}



3.Count the number of even and odd elements in an array.


public class evenOdd {
    public static void main(String[] args) {
        int[] arr = {1,2,3,4,5};
        int n = cou(arr);
        System.out.println("Even : "+n);
        System.out.println("odd : "+(arr.length-n));
    }
    public static int cou(int[] arr){
        int count = 0;
        for(int i : arr){
            if(i%2==0){
                count++;
            }
        }
        return count;
    }
}



4.Merge two arrays into a third array. 


public class Merge {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        int[] arr = {1,2,3,4,5};
        int[] arr2 = {6,7,8,9,10};
        int[] arr3 = new int[arr.length+arr2.length];
        int index = 0;
        for(int i : arr){
            arr3[index] = i;
            index++;
        }
        for(int i : arr2){
            arr3[index] = i;
            index++;
        }

        for(int i : arr3){
            System.out.println(i);
        }
    }

}



5.Sort an integer array in ascending order without using built-in sort functions.

public class sort {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        int[] arr = {5,4,3,2,1};
        sorting(arr);
        for (int idx = 0; idx < arr.length; idx++) {
            System.out.println(arr[idx]);
            
        }
    }

    public static void sorting(int[] arr){
        for(int i = 0;i<arr.length;i++){
            for(int j = 0;j<arr.length-i-1;j++){
                if(arr[j]>arr[j+1]){
                    int temp = arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1] = temp;
                }
            }
        }
    }


}




6.Shift all zeros in an integer array to the end without changing the order of other elements.


import java.util.*;
public class shiftZero {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        int[] arr = {1,2,3,4,0,0,0,6,4,0,5};
        shift(arr);
    }
    public static void shift(int[] arr) {
        int[] arr2 = new int[arr.length];
        Arrays.fill(arr2, 0);
        int k = 0;
        for(int i = 0;i<arr.length;i++){
            if(arr[i] != 0){
                arr2[k] = arr[i];
                k++;
            }
        }
        for (int idx = 0; idx < arr.length; idx++) {
            System.out.println(arr2[idx]);
            
        }
    }

}



7.Print a 2D array (matrix) in row-major order.

public class rowMajor {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        int[][] myMatrix = {
            {1, 2, 3},
            {4, 5, 6},
            {7, 8, 9}
        };
        printRowMajorarr(myMatrix);
        System.out.println();
        printColMajorarr(myMatrix);
    }
    public static void printRowMajorarr(int arr[][]){
        for(int i = 0;i<arr.length;i++){
            for(int j = 0;j<arr[0].length;j++){
                System.out.print(arr[i][j]);
            }
            System.out.println();
        }
    }
    public static void printColMajorarr(int arr[][]){
        for(int i = 0;i<arr.length;i++){
            for(int j = 0;j<arr[0].length;j++){
                System.out.print(arr[j][i]);
            }
            System.out.println();
        }
    }
}




8.Count the frequency of each element in an array.

import java.util.*;
public class freqElement {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        int[] arr = {1,2,3,4,5,1};
        countFreq(arr);
    }

    public static void countFreq(int[] arr){
        Arrays.sort(arr);
        int[] arr2 = new int[arr[arr.length-1]+1];
        for(int i = 0;i<arr.length;i++){
            int x = arr[i];
            arr2[x]++;
        }
        for(int i = 0;i<arr2.length;i++){
            if((arr2[i])!=0){
                System.out.println(i+" "+arr2[i]);
            }
        }
    }

}

9.Find the intersection of two arrays (common elements).

public class Intersection {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        int[] arr = {1,2,3,4,5};
        int[] arr2 = {4,5,6,7,8};
        comman(arr, arr2);

    }
    public static void comman(int[] arr,int[] arr2){
        for(int i = 0;i<arr.length;i++){
            for(int j = 0;j<arr2.length;j++){
                if(arr[i] == arr2[j]){
                    System.out.println(arr[i]);
                }
            }
        }
    }

}


10.Print the transpose of a 2D matrix.

public class Transpose {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        int[][] arr = {{1,2,3},{4,5,6},{7,8,9}};
        Trans(arr);
    }
    public static void Trans(int[][] arr) {
        int[][] arr2 = new int[arr[0].length][arr.length];
        for(int i = 0;i<arr.length;i++){
            for(int j = 0;j<arr[0].length;j++){
                int x = arr[i][j];
                arr2[j][i] = x;
            }
        }
        for(int i = 0;i<arr.length;i++){
            for(int j = 0;j<arr[0].length;j++){
                System.out.print(arr2[i][j]);
            }
            System.out.println();
        }

    }

}
